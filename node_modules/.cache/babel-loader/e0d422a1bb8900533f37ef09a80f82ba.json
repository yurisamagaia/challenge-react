{"ast":null,"code":"var _jsxFileName = \"/Users/yurisamagaia/Sites/app/host/src/components/Plans/Plans.js\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport './Plans.scss';\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport PlanoP from \"../../assets/images/plan-1.svg\";\nimport PlanoM from \"../../assets/images/plan-2.svg\";\nimport PlanoTurbo from \"../../assets/images/plan-3.svg\";\nimport Info from \"../../assets/images/info.svg\";\nimport ArrowLeft from \"../../assets/images/arrow-left.svg\";\nimport ArrowRight from \"../../assets/images/arrow-right.svg\";\n\nconst Plans = () => {\n  const {\n    selectedPlan\n  } = useSelector(redux => redux.plans);\n  const {\n    selectedPeriod\n  } = useSelector(redux => redux.period);\n  const [itemSelected, setItemSelected] = useState(0);\n  const itemsRef = useRef([]);\n  useEffect(() => {\n    itemsRef.current = itemsRef.current.slice(0, 2);\n  }, []);\n\n  const renderPlan = value => {\n    switch (value) {\n      case \"Plano P\":\n        return PlanoP;\n\n      case \"Plano M\":\n        return PlanoM;\n\n      case \"Plano Turbo\":\n        return PlanoTurbo;\n\n      default:\n        return PlanoP;\n    }\n  };\n\n  const priceFormat = price => {\n    let priceFormated = new Intl.NumberFormat(\"pt-BR\", {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    });\n    return priceFormated.format(price);\n  };\n\n  const priceFormatDiscaount = price => {\n    let priceFormated = new Intl.NumberFormat(\"pt-BR\", {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    });\n    return priceFormated.format(price - price * 40 / 100);\n  };\n\n  const priceFormatMonth = (price, months) => {\n    let priceFormated = new Intl.NumberFormat(\"pt-BR\", {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    });\n    return priceFormated.format((price - price * 40 / 100) / months);\n  };\n\n  const priceSaved = price => {\n    let priceFormated = new Intl.NumberFormat(\"pt-BR\", {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    });\n    return priceFormated.format(price * 40 / 100);\n  };\n\n  const moveCards = value => {\n    if (value === 'next') {\n      if (itemSelected < 2) {\n        setItemSelected(itemSelected + 1);\n        itemsRef.current[itemSelected + 1].scrollIntoView({\n          behavior: \"smooth\",\n          block: \"start\"\n        });\n      }\n    } else if (value === 'prev') {\n      if (itemSelected > 0) {\n        setItemSelected(itemSelected - 1);\n        itemsRef.current[itemSelected - 1].scrollIntoView({\n          behavior: \"smooth\",\n          block: \"start\"\n        });\n      }\n    }\n  };\n\n  const hire = value => {\n    window.location.href = \"?a=add&pid=\" + value + \"&billingcycle=\" + selectedPeriod + \"&promocode=PROMOHG40\";\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"containers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"arrows\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => moveCards('prev'),\n    className: \"arrow-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"Plano\",\n    src: ArrowLeft,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => moveCards('next'),\n    className: \"arrow-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"Plano\",\n    src: ArrowRight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-plans\",\n    id: \"plans\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, selectedPlan.map((plano, i) => /*#__PURE__*/React.createElement(\"div\", {\n    key: plano.id,\n    ref: el => itemsRef.current[i] = el,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: \"plan \" + (plano.name === 'Plano M' ? 'plan-selected' : ''),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    component: \"div\",\n    align: \"center\",\n    className: \"plan-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"Plano\",\n    src: renderPlan(plano.name),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 29\n    }\n  }, plano.name)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    component: \"div\",\n    align: \"center\",\n    className: \"plan-price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: \"price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"price-normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 33\n    }\n  }, \"R$ \", priceFormat(plano.cycle[selectedPeriod].priceOrder)), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"price-discaount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 33\n    }\n  }, \"R$ \", priceFormatDiscaount(plano.cycle[selectedPeriod].priceOrder))), /*#__PURE__*/React.createElement(Typography, {\n    className: \"price-text-month\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 29\n    }\n  }, \"equivalente a\"), /*#__PURE__*/React.createElement(Typography, {\n    className: \"price-month\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 29\n    }\n  }, \"R$ \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 36\n    }\n  }, priceFormatMonth(plano.cycle[selectedPeriod].priceOrder, plano.cycle[selectedPeriod].months)), \"/m\\xEAs*\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"price-hire \" + (plano.name === 'Plano M' ? 'price-hire-selected' : ''),\n    onClick: () => hire(plano.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 29\n    }\n  }, \"Contrate Agora\"), /*#__PURE__*/React.createElement(Typography, {\n    className: \"price-information\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 33\n    }\n  }, \"1 ano de Dom\\xEDnio Gr\\xE1tis \", /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"Informa\\xE7\\xE3o\",\n    src: Info,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 63\n    }\n  }))), /*#__PURE__*/React.createElement(Typography, {\n    className: \"price-economy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 29\n    }\n  }, \"economize R$ \", priceSaved(plano.cycle[selectedPeriod].priceOrder, plano.cycle[selectedPeriod]), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 33\n    }\n  }, \"40% OFF\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    component: \"div\",\n    align: \"left\",\n    className: \"plan-items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: \"items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 29\n    }\n  }, plano.name === 'Plano P' ? 'Para 1 site' : 'Sites Ilimitados'), /*#__PURE__*/React.createElement(Typography, {\n    className: \"items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 33\n    }\n  }, \"100 GB\"), \" de Armazenamento\"), /*#__PURE__*/React.createElement(Typography, {\n    className: \"items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 29\n    }\n  }, \"Contas de E-mail \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 50\n    }\n  }, \" Ilimitadas\")), /*#__PURE__*/React.createElement(Typography, {\n    className: \"items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 29\n    }\n  }, \"Criador de Sites \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 50\n    }\n  }, /*#__PURE__*/React.createElement(\"u\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 53\n    }\n  }, \"Gr\\xE1tis\"))), /*#__PURE__*/React.createElement(Typography, {\n    className: \"items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 29\n    }\n  }, \"Certificado SSL \", /*#__PURE__*/React.createElement(\"b\", {\n    className: plano.name === 'Plano Turbo' ? 'underline' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 49\n    }\n  }, \"Gr\\xE1tis\"), \" (HTTPS)\")))))));\n};\n\nexport default Plans;","map":{"version":3,"sources":["/Users/yurisamagaia/Sites/app/host/src/components/Plans/Plans.js"],"names":["React","useEffect","useState","useRef","useSelector","Box","Paper","Typography","Button","Plans","selectedPlan","redux","plans","selectedPeriod","period","itemSelected","setItemSelected","itemsRef","current","slice","renderPlan","value","PlanoP","PlanoM","PlanoTurbo","priceFormat","price","priceFormated","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","format","priceFormatDiscaount","priceFormatMonth","months","priceSaved","moveCards","scrollIntoView","behavior","block","hire","window","location","href","ArrowLeft","ArrowRight","map","plano","i","id","el","name","cycle","priceOrder","Info"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport './Plans.scss'\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nimport PlanoP from \"../../assets/images/plan-1.svg\";\nimport PlanoM from \"../../assets/images/plan-2.svg\";\nimport PlanoTurbo from \"../../assets/images/plan-3.svg\";\nimport Info from \"../../assets/images/info.svg\";\nimport ArrowLeft from \"../../assets/images/arrow-left.svg\";\nimport ArrowRight from \"../../assets/images/arrow-right.svg\";\n\nconst Plans = () => {\n\n    const { selectedPlan } = useSelector(redux => redux.plans);\n    const { selectedPeriod } = useSelector(redux => redux.period);\n    const [itemSelected, setItemSelected] = useState(0);\n    const itemsRef = useRef([]);\n\n    useEffect(() => {\n       itemsRef.current = itemsRef.current.slice(0, 2);\n    }, []);\n\n    const renderPlan = (value) => {\n        switch (value) {\n            case \"Plano P\":\n                return PlanoP;\n            case \"Plano M\":\n                return PlanoM;\n            case \"Plano Turbo\":\n                return PlanoTurbo;\n            default:\n                return PlanoP;\n        }\n    };\n\n    const priceFormat = (price) => {\n        let priceFormated = new Intl.NumberFormat(\"pt-BR\", {\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2,\n        });\n        return priceFormated.format(price);\n    }\n\n    const priceFormatDiscaount = (price) => {\n        let priceFormated = new Intl.NumberFormat(\"pt-BR\", {\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2,\n        });\n        return priceFormated.format(price - (price * 40) / 100);\n    }\n    \n    const priceFormatMonth = (price, months) => {\n        let priceFormated = new Intl.NumberFormat(\"pt-BR\", {\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2,\n        });\n        return priceFormated.format((price - (price * 40) / 100) / months);\n    }\n\n    const priceSaved = (price) => {\n        let priceFormated = new Intl.NumberFormat(\"pt-BR\", {\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2,\n        });\n        return priceFormated.format((price * 40) / 100);\n    }\n\n    const moveCards = value => {\n        if (value === 'next') {\n            if (itemSelected < 2) {\n                setItemSelected(itemSelected + 1)\n                itemsRef.current[itemSelected + 1].scrollIntoView({ behavior: \"smooth\", block:\"start\" });\n            }\n        } else if (value === 'prev') {\n            if (itemSelected > 0) {\n                setItemSelected(itemSelected - 1)\n                itemsRef.current[itemSelected - 1].scrollIntoView({ behavior: \"smooth\", block:\"start\" });\n            }\n        }\n    };\n\n    const hire = value => {\n        window.location.href = \"?a=add&pid=\"+value+\"&billingcycle=\"+selectedPeriod+\"&promocode=PROMOHG40\"\n    }\n    \n  return(\n    <div className=\"containers\">\n      <div className=\"arrows\">\n        <div onClick={() => moveCards('prev')} className=\"arrow-left\">\n            <img alt=\"Plano\" src={ArrowLeft} />\n        </div>\n        <div onClick={() => moveCards('next')} className=\"arrow-right\">\n            <img alt=\"Plano\" src={ArrowRight} />\n        </div>\n      </div>\n        <div className=\"container-plans\" id=\"plans\">\n            {selectedPlan.map((plano, i) => (\n                <div key={plano.id} ref={el => itemsRef.current[i] = el}  >\n                    <Paper className={\"plan \" + (plano.name === 'Plano M' ? 'plan-selected' : '')}>\n                        <Box component=\"div\" align=\"center\" className=\"plan-header\">\n                            <img alt=\"Plano\" src={renderPlan(plano.name)} />\n                            <Typography className=\"title\">\n                                {plano.name}\n                            </Typography>\n                        </Box>\n                        <div className=\"separator\"></div>\n                        <Box component=\"div\" align=\"center\" className=\"plan-price\">\n                            <Typography className=\"price\">\n                                <span className=\"price-normal\">R$ {priceFormat(plano.cycle[selectedPeriod].priceOrder)}</span>\n                                <span className=\"price-discaount\">R$ {priceFormatDiscaount(plano.cycle[selectedPeriod].priceOrder)}</span>\n                            </Typography>\n                            <Typography className=\"price-text-month\">\n                                equivalente a\n                            </Typography>\n                            <Typography className=\"price-month\">\n                                R$ <span>{priceFormatMonth(plano.cycle[selectedPeriod].priceOrder, plano.cycle[selectedPeriod].months)}</span>/mês*\n                            </Typography>\n                            <Button className={\"price-hire \" + (plano.name === 'Plano M' ? 'price-hire-selected' : '')} onClick={() => hire(plano.id)}>\n                                Contrate Agora\n                            </Button>\n                            <Typography className=\"price-information\">\n                                <span>1 ano de Domínio Grátis <img alt=\"Informação\" src={Info} /></span>\n                            </Typography>\n                            <Typography className=\"price-economy\">\n                                economize R$ {priceSaved(plano.cycle[selectedPeriod].priceOrder, plano.cycle[selectedPeriod])}\n                                <span>40% OFF</span>\n                            </Typography>\n                        </Box>\n                        <div className=\"separator\"></div>\n                        <Box component=\"div\" align=\"left\" className=\"plan-items\">\n                            <Typography className=\"items\">\n                                {plano.name === 'Plano P' ? 'Para 1 site' : 'Sites Ilimitados'}\n                            </Typography>\n                            <Typography className=\"items\">\n                                <b>100 GB</b> de Armazenamento\n                            </Typography>\n                            <Typography className=\"items\">\n                                Contas de E-mail <b> Ilimitadas</b>\n                            </Typography>\n                            <Typography className=\"items\">\n                                Criador de Sites <b><u>Grátis</u></b>\n                            </Typography>\n                            <Typography className=\"items\">\n                                Certificado SSL <b className={plano.name === 'Plano Turbo' ? 'underline' : ''}>Grátis</b> (HTTPS)\n                            </Typography>\n                        </Box>\n                    </Paper>\n                </div>\n            ))}\n        </div>\n    </div>\n  )\n}\n\nexport default Plans;"]},"metadata":{},"sourceType":"module"}